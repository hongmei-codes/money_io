{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","role","aria-label","state","action","type","transactions","filter","t","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","Fragment","IncomeExpenses","amounts","income","expense","Math","abs","className","Transaction","sign","classAttribute","text","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Date","now","target","reset","onChange","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28d46d30.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <div>\n            <h1><span role=\"img\" aria-label=\"money with wings emoji\">ðŸ’¸</span> Money I/O</h1>\n        </div>\n    )\n}\n","// specify how state changes in reaction to user actions\n// reducer is used to change state and pass it down to components\n\nexport default (state, action) => {\n    switch(action.type) {\n        case 'DELETE_TRANSACTION':\n            return {...state, transactions: state.transactions.filter(t => t.id !== action.payload)}\n        case 'ADD_TRANSACTION':\n            return {...state, transactions: [action.payload, ...state.transactions]}\n        default:\n            return state;\n    }\n}\n\n// AppReducer.js state ->\n// GlobalState.js userReducer -> have access to state values from initial state ->\n// GlobalContext.Provider which has a value prop ->\n// App.js get values and use in balance, income/expense...","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial state\nconst initialState = {\n    // global state live here\n    transactions: []\n}\n\n// create global context\nexport const GlobalContext = createContext(initialState);\n\n// for other scripts to access to global state\n// need to create a provider\nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // action which calls reducer\n    function deleteTransaction(id) {\n        dispatch({type: 'DELETE_TRANSACTION', payload: id});\n    }\n\n    // action which calls reducer\n    function addTransaction(transaction) {\n        dispatch({type: 'ADD_TRANSACTION', payload: transaction});\n    }\n\n    return (\n        <GlobalContext.Provider value={{transactions: state.transactions, deleteTransaction, addTransaction}}>\n            { children }\n        </GlobalContext.Provider>\n    )\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Balance = () => {\n    \n    const { transactions } = useContext(GlobalContext);\n\n    // get total\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce(\n        (acc, item) => (acc += item),\n        0\n    ).toFixed(2);\n\n    return (\n        <React.Fragment>\n            <h4>Current Balance</h4>\n        <h1 id=\"balance\">${total}</h1>\n        </React.Fragment>\n    )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const IncomeExpenses = () => {\n\n    // receive data from global context\n    const { transactions } = useContext(GlobalContext);\n\n    // get total income and total expense\n    const amounts = transactions.map(transaction => transaction.amount);\n    const income = amounts.filter(item => item > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\n    const expense = Math.abs(amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0)).toFixed(2);\n\n    return (\n        <React.Fragment>\n            <div className=\"inc-exp-container\">\n                <div>\n                    <h4>Money In</h4>\n                    <p className=\"money plus\">+${income}</p>\n                </div>\n                <div>\n                    <h4>Money Out</h4>\n                    <p className=\"money minus\">-${expense}</p>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Transaction = ({ transaction }) => {\n\n    const sign = transaction.amount > 0 ? \"+\" : \"-\";\n    const classAttribute = transaction.amount > 0 ? \"plus\" : \"minus\";\n\n    const { deleteTransaction } = useContext(GlobalContext);\n\n    return (\n        <li className={classAttribute}>\n            {transaction.text}\n            <span>{sign}${Math.abs(transaction.amount)}</span>\n            <button className=\"delete-btn\" onClick={() => deleteTransaction(transaction.id)}>x</button>\n        </li>\n    );\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { Transaction } from './Transaction';\n\nexport const TransactionList = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    return (\n        <React.Fragment>\n            <h3>Past Transactions</h3>\n            <ul className=\"list\">\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\n            </ul>\n        </React.Fragment>\n    );\n}\n\n// values brought in from GlobalContext\n// values are mapped through\n// for each value in values: render a transaction component that looks like...\n// (from Transaction.js) <li className=\"\">{transaction.text}<span>{transaction amount}</span><button className=\"delete-btn\">x</button></li>\n// the transaction component is contained within (in this TransactionList.js) <ul className=\"list\"></ul>","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    const { addTransaction } = useContext(GlobalContext);\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const newTransaction = {\n            id: Date.now(),\n            text: text,\n            amount: +amount // turns string to number (sign and decimals unaffected)\n        }\n        addTransaction(newTransaction);\n\n        e.target.reset();\n    }\n    return (\n        <React.Fragment>\n            <h3>Add Transactions</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <input type=\"text\" value={text} onChange={e => setText(e.target.value)} placeholder=\"Transaction name...\" />\n                </div>\n                <div className=\"form-control\">\n                    <input type=\"number\"  value={amount} onChange={e => setAmount(e.target.value)}/>\n                    <p>+ for income, - for expense</p>\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header'\nimport { Balance } from './components/Balance'\nimport { IncomeExpenses } from './components/IncomeExpenses'\nimport { TransactionList } from './components/TransactionList'\nimport { AddTransaction } from './components/AddTransaction'\nimport { GlobalProvider } from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}